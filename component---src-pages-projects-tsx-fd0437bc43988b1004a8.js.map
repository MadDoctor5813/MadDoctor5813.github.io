{"version":3,"sources":["webpack:///./src/components/project.tsx","webpack:///./src/pages/projects.tsx"],"names":["ProjectTitle","styled","h3","ProjectLink","a","Project","props","project","frontmatter","name","href","link","dangerouslySetInnerHTML","__html","html","Projects","data","useStaticQuery","polytope","childMarkdownRemark","slugline","electoralCodex"],"mappings":"+JAqCMA,EAAeC,IAAOC,GAAV,4EAAGD,CAAH,0BAIZE,EAAcF,IAAOG,EAAV,2EAAGH,CAAH,mBAoBFI,EAZyB,SAAAC,GACtC,OACE,6BACE,kBAACN,EAAD,KAAeM,EAAMC,QAAQC,YAAYC,MACzC,kBAACN,EAAD,CAAaO,KAAMJ,EAAMC,QAAQC,YAAYG,MAC1CL,EAAMC,QAAQC,YAAYG,MAE7B,yBAAKC,wBAAyB,CAAEC,OAAQP,EAAMC,QAAQO,UCP7CC,UAhCE,WACf,IAAMC,EAAOC,yBAAc,cAoB3B,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAASV,QAASS,EAAKE,SAASC,sBAChC,6BACA,kBAAC,EAAD,CAASZ,QAASS,EAAKI,SAASD,sBAChC,6BACA,kBAAC,EAAD,CAASZ,QAASS,EAAKK,eAAeF","file":"component---src-pages-projects-tsx-fd0437bc43988b1004a8.js","sourcesContent":["import { graphql } from \"gatsby\"\r\nimport { FluidObject } from \"gatsby-image\"\r\nimport React from \"react\"\r\nimport Img from \"gatsby-image\"\r\n\r\nimport styled from \"styled-components\"\r\n\r\nexport const query = graphql`\r\n  fragment Project on MarkdownRemark {\r\n    frontmatter {\r\n      name\r\n      link\r\n      projectImage {\r\n        childImageSharp {\r\n          fluid(maxWidth: 500) {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n    }\r\n    html\r\n  }\r\n`\r\n\r\nexport interface ProjectQuery {\r\n  frontmatter: {\r\n    name: string\r\n    link: string\r\n    projectImage: {\r\n      childImageSharp: {\r\n        fluid: FluidObject\r\n      }\r\n    }\r\n  }\r\n  html: string\r\n}\r\n\r\nconst ProjectTitle = styled.h3`\r\n  margin-bottom: 0.5em;\r\n`\r\n\r\nconst ProjectLink = styled.a`\r\n  margin-top: 0;\r\n`\r\n\r\ninterface ProjectProps {\r\n  project: ProjectQuery\r\n}\r\n\r\nconst Project: React.FC<ProjectProps> = props => {\r\n  return (\r\n    <div>\r\n      <ProjectTitle>{props.project.frontmatter.name}</ProjectTitle>\r\n      <ProjectLink href={props.project.frontmatter.link}>\r\n        {props.project.frontmatter.link}\r\n      </ProjectLink>\r\n      <div dangerouslySetInnerHTML={{ __html: props.project.html }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Project\r\n","import { graphql, useStaticQuery } from \"gatsby\"\r\nimport React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport Project, { ProjectQuery } from \"../components/project\"\r\n\r\ninterface ProjectsQuery {\r\n  polytope: {\r\n    childMarkdownRemark: ProjectQuery\r\n  }\r\n  slugline: {\r\n    childMarkdownRemark: ProjectQuery\r\n  }\r\n  electoralCodex: {\r\n    childMarkdownRemark: ProjectQuery\r\n  }\r\n}\r\n\r\nconst Projects = () => {\r\n  const data = useStaticQuery<ProjectsQuery>(graphql`\r\n    query {\r\n      polytope: file(relativePath: { eq: \"polytope.md\" }) {\r\n        childMarkdownRemark {\r\n          ...Project\r\n        }\r\n      }\r\n      slugline: file(relativePath: { eq: \"slugline.md\" }) {\r\n        childMarkdownRemark {\r\n          ...Project\r\n        }\r\n      }\r\n      electoralCodex: file(relativePath: { eq: \"electoral-codex.md\" }) {\r\n        childMarkdownRemark {\r\n          ...Project\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <Layout>\r\n      <Project project={data.polytope.childMarkdownRemark} />\r\n      <hr/>\r\n      <Project project={data.slugline.childMarkdownRemark} />\r\n      <hr />\r\n      <Project project={data.electoralCodex.childMarkdownRemark} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n"],"sourceRoot":""}